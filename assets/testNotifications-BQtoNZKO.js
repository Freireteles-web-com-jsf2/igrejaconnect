const i={testToast:e=>{e({title:"🧪 Teste de Toast",message:"Esta é uma notificação de teste do sistema",type:"info"})},testPushNotification:()=>"Notification"in window&&Notification.permission==="granted"?(new Notification("🧪 Teste Push - IgrejaConnect",{body:"Sistema de notificações funcionando corretamente!",icon:"/favicon.ico",badge:"/favicon.ico",tag:"test-notification"}),!0):!1,testApiNotification:async()=>{try{const e=localStorage.getItem("supabase_token"),t=await fetch("/api/notifications",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({title:"🧪 Teste de API",message:"Notificação criada via API de teste",type:"success",send_to_all:!1,target_users:[]})});if(t.ok){const o=await t.json();return console.log("✅ Teste de API bem-sucedido:",o),!0}else return console.error("❌ Erro no teste de API:",t.statusText),!1}catch(e){return console.error("❌ Erro no teste de API:",e),!1}},testBirthdayNotifications:async()=>{try{const e=localStorage.getItem("supabase_token"),t=await fetch("/api/notifications/auto/birthday",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(t.ok){const o=await t.json();return console.log("✅ Teste de aniversários bem-sucedido:",o),o}else return console.error("❌ Erro no teste de aniversários:",t.statusText),!1}catch(e){return console.error("❌ Erro no teste de aniversários:",e),!1}},testMeetingNotifications:async()=>{try{const e=localStorage.getItem("supabase_token"),t=await fetch("/api/notifications/auto/meetings",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(t.ok){const o=await t.json();return console.log("✅ Teste de reuniões bem-sucedido:",o),o}else return console.error("❌ Erro no teste de reuniões:",t.statusText),!1}catch(e){return console.error("❌ Erro no teste de reuniões:",e),!1}},runAllTests:async e=>{console.log("🧪 Iniciando testes do sistema de notificações..."),console.log("1. Testando toast..."),i.testToast(e),await new Promise(s=>setTimeout(s,2e3)),console.log("2. Testando push notification...");const t=i.testPushNotification();console.log(t?"✅ Push notification OK":"⚠️ Push notification não disponível"),await new Promise(s=>setTimeout(s,2e3)),console.log("3. Testando API de notificações...");const o=await i.testApiNotification();console.log(o?"✅ API OK":"❌ API com erro"),await new Promise(s=>setTimeout(s,2e3)),console.log("4. Testando notificações de aniversário...");const n=await i.testBirthdayNotifications();console.log(n?"✅ Aniversários OK":"❌ Aniversários com erro"),await new Promise(s=>setTimeout(s,2e3)),console.log("5. Testando notificações de reuniões...");const a=await i.testMeetingNotifications();return console.log(a?"✅ Reuniões OK":"❌ Reuniões com erro"),console.log("🎉 Testes concluídos!"),e({title:"🎉 Testes concluídos!",message:"Verifique o console para ver os resultados detalhados",type:"success"}),{toast:!0,push:t,api:o,birthday:!!n,meeting:!!a}}};typeof window<"u"&&(window.testNotifications=i);export{i as testNotificationSystem};
