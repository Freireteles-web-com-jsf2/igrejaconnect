name: GitHub Pages Deploy v2

on:
  push:
    branches: [ main ]

# Add permissions for GitHub Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Prepare clean build environment
      run: |
        echo "=== ORIGINAL PACKAGE.JSON ==="
        cat package.json | head -20
        
        echo "=== COPYING CLEAN PACKAGE.JSON ==="
        cp package.gh-pages.json package.json
        
        echo "=== NEW PACKAGE.JSON ==="
        cat package.json | head -20
        
        echo "=== CLEANING ENVIRONMENT ==="
        rm -rf node_modules package-lock.json ~/.npm
        npm cache clean --force || true
        
        echo "=== INSTALLING DEPENDENCIES ==="
        npm install
        
        echo "=== AVAILABLE SCRIPTS ==="
        npm run
        
        echo "=== CHECKING FOR CLOUDFLARE DEPS ==="
        if grep -r "cloudflare\|miniflare\|wrangler" package-lock.json; then
          echo "ERROR: Found Cloudflare dependencies!"
          exit 1
        else
          echo "SUCCESS: No Cloudflare dependencies found"
        fi

    - name: TypeScript compilation
      run: |
        echo "=== COMPILING TYPESCRIPT ==="
        npx tsc -b

    - name: Build application
      run: |
        echo "=== BUILDING WITH CLEAN CONFIG ==="
        echo "Current directory: $(pwd)"
        echo "Available configs:"
        ls -la vite.config*
        echo "Running command: NODE_ENV=production npx vite build --config vite.config.gh-pages.js"
        NODE_ENV=production npx vite build --config vite.config.gh-pages.js
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        # Try personal token first, fallback to GITHUB_TOKEN
        github_token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Deploy to GitHub Pages'